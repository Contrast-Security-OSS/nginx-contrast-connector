# This is a sample build configuration for Other.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: atlassian/default-image:2

pipelines:
  default:
    - parallel:
      # nginx 1.14.0 module
      - step:
          name: ubuntu-18 nginx-1.14.0 pkg
          image: contrast/installer-build:ubuntu-18
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.14.0 .
      - step:
          name: ubuntu-16 nginx-1.14.0 pkg
          image: contrast/installer-build:ubuntu-16
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.14.0 .
      - step:
          name: ubuntu-14 nginx-1.14.0 pkg
          image: contrast/installer-build:ubuntu-14
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.14.0 .
      - step:
          name: centos7 nginx-1.14.0 pkg
          image: contrast/installer-build:centos-7
          script:
            - yum install autoconf automake libtool -y 
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.14.0 .

      # nginx 1.15.2 module
      - step:
          name: ubuntu-18 nginx-1.15.2 pkg
          image: contrast/installer-build:ubuntu-18
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.15.2 .
      - step:
          name: ubuntu-16 nginx-1.15.2 pkg
          image: contrast/installer-build:ubuntu-16
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.15.2 .
      - step:
          name: ubuntu-14 nginx-1.15.2 pkg
          image: contrast/installer-build:ubuntu-14
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.15.2 .
      - step:
          name: centos7 nginx-1.15.2 pkg
          image: contrast/installer-build:centos-7
          script:
            - yum install autoconf automake libtool -y 
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.15.2 .

      # nginx 1.12.2 module
      - step:
          name: ubuntu-18 nginx-1.12.2 pkg
          image: contrast/installer-build:ubuntu-18
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.12.2 .
      - step:
          name: ubuntu-16 nginx-1.12.2 pkg
          image: contrast/installer-build:ubuntu-16
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.12.2 .
      - step:
          name: ubuntu-14 nginx-1.12.2 pkg
          image: contrast/installer-build:ubuntu-14
          script:
            - apt-get install autoconf automake libtool -y
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.12.2 .
      - step:
          name: centos7 nginx-1.12.2 pkg
          image: contrast/installer-build:centos-7
          script:
            - yum install autoconf automake libtool -y 
            - git submodule update --init --recursive
            - ./build_module.sh -y -n contrast -v 1.12.2 .
  branches:
    develop:
     - step:
        name: Deploy Base Image
        caches:
          - docker
        services:
          - docker
        script:
          - git clone git@bitbucket.org:contrastsecurity/contrast-modsecurity.git 
          - git clone git@bitbucket.org:contrastsecurity/nginx-speedracer-connector.git
          - git clone https://github.com/SpiderLabs/owasp-modsecurity-crs.git
          - echo $CONTRAST_ARTIFACTORY_PASSWORD | docker login -u $CONTRAST_ARTIFACTORY_USER --password-stdin contrastsecurity-docker-local.jfrog.io 
          - cp bitbucket_scripts/Dockerfile .
          - docker build -t contrastsecurity-docker-local.jfrog.io/universal-agent-base .
          - docker push contrastsecurity-docker-local.jfrog.io/universal-agent-base
