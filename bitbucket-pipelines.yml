image: atlassian/default-image:2

definitions:
    build_steps_deb: &build_all_deb
      - apt-get install autoconf automake libtool -y
      - git submodule update --init --recursive
      - mkdir pkgs
      - ./build_module.sh -y -o `pwd`/pkgs -n contrast -v 1.14.0 .
      - ./build_module.sh -y -o `pwd`/pkgs -n contrast -v 1.15.2 .
      - ./build_module.sh -y -o `pwd`/pkgs -n contrast -v 1.12.2 .

    build_steps_rpm: &build_all_rpm
      - yum install autoconf automake libtool -y
      - git submodule update --init --recursive
      - mkdir pkgs
      - ./build_module.sh -y -o `pwd`/pkgs -n contrast -v 1.14.0 .
      - ./build_module.sh -y -o `pwd`/pkgs -n contrast -v 1.15.2 .
      - ./build_module.sh -y -o `pwd`/pkgs -n contrast -v 1.12.2 .

pipelines:
  default:
    - parallel:
      - step:
          name: ubuntu-18 nginx-1.14.0 pkg
          image: contrast/installer-build:ubuntu-18
          script: *build_all_deb
          artifacts:
              - pkgs/*
      - step:
          name: ubuntu-16 nginx-1.14.0 pkg
          image: contrast/installer-build:ubuntu-16
          script: *build_all_deb
          artifacts:
              - pkgs/*
      - step:
          name: ubuntu-14 nginx-1.14.0 pkg
          image: contrast/installer-build:ubuntu-14
          script: *build_all_deb
          artifacts:
              - pkgs/*
      - step:
          name: centos7 nginx-1.14.0 pkg
          image: contrast/installer-build:centos-7
          script: *build_all_rpm
          artifacts:
              - pkgs/*

    - step:
        name: deploy pkgs to staging
        image: contrast/installer-build:ubuntu-18
        script:
            - ls -lah pkgs
            - bitbucket_scripts/deploy.sh pkgs
    
  branches:
    develop:
     - step:
        name: Deploy Base Image
        caches:
          - docker
        services:
          - docker
        script:
          - git clone git@bitbucket.org:contrastsecurity/contrast-modsecurity.git 
          - git clone git@bitbucket.org:contrastsecurity/nginx-speedracer-connector.git
          - git clone https://github.com/SpiderLabs/owasp-modsecurity-crs.git
          - echo $CONTRAST_ARTIFACTORY_PASSWORD | docker login -u $CONTRAST_ARTIFACTORY_USER --password-stdin contrastsecurity-docker-local.jfrog.io 
          - cp bitbucket_scripts/Dockerfile .
          - docker build -t contrastsecurity-docker-local.jfrog.io/universal-agent-base .
          - docker push contrastsecurity-docker-local.jfrog.io/universal-agent-base
